* {
  margin: 0;
  padding: 0;
}

// $ to define variables
$color-primary: #f9ed69; // yellow color
$color-secondary: #f08a5d; // orange color
$color-tertiary: #b83b5e; // pink color
$color-text-dark: #333; // dark grey color
$color-text-light: #eee; // light color

$width-button: 150px;

// like a function for a block of css, called mixin
@mixin clearfix {
    &::after {
    content: "";
    clear: both;
    display: table;
  }
}

// can also have arguments in mixins
@mixin style-link-text($color) {
  text-decoration: none;
  text-transform: uppercase;
  color: $color;
}

// a more traditional function for css
@function divide($a, $b) {
  @return $a / $b;
}

nav {
  margin: divide(60, 2) * 1px; // 30px
  background-color: $color-primary;
  
  // call the mixin clearflix
  @include clearfix;
}


// can use nesting like this
.navigation {
  list-style: none;
  float: left;
  
  li {
    display: inline-block;
    margin-left: 30px;
    
    // & gets the selctor at the current point, name of class
    &:first-child {
      margin: 0;
    }
    
    a:link {
      @include style-link-text($color-text-dark);
    }
  }
}

.buttons {
  float: right;
}

// a placeholder, the selector is copied to % in the complied code
%btn-placeholder {
  padding: 10px;
  display: inline-block;
  text-align: center;
  border-radius: 100px;
  width: $width-button;
  @include style-link-text($color-text-light);
}

.btn-main {
  &:link {
    @extend %btn-placeholder;
    background-color: $color-secondary
  }
  
  &:hover {
    background-color: darken($color-secondary, 15%);
  }
}

.btn-hot {
  &:link {
    @extend %btn-placeholder;
    background-color: $color-tertiary
  }
  
  &:hover {
    background-color: lighten($color-tertiary, 10%);
  }
}